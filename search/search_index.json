{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ShellHub is a modern SSH server for remotely accessing Linux devices via command line (using any SSH client) or web-based user interface. It is intended to be used instead of sshd . Typically, if you want to SSH a Linux device on a local network, you just need to know its IP address. However, in order to access a Linux device from outside the local network, you will have to go through a few inconveniences, such as getting its public IP address and configuring the router. Changing the VPN/firewall configuration can be cumbersome if the device is behind a corporate firewall that does not allow SSH connections. ShellHub provides a way to avoid all these hassles, helping you easily and seamlessly access any Linux device behind firewall and NAT.","title":"What is ShellHub?"},{"location":"getting-started/","text":"This tutorial will guide you through the steps needed to install and run ShellHub. If you are looking for instructions on how to set up ShellHub for your device fleet on your cloud infrastructure the same steps apply. Installing \u00b6 ShellHub is designed using the microservices design pattern, so that multiple small and isolated services collaborate to provide the server. In order to make it easier to test ShellHub and its features, we have created a Docker Compose environment that brings all of these components up and connects them together on a single machine. Before continuing, make sure you have installed Docker Engine and Docker Compose In a working directory, clone the ShellHub repository: git clone -b v0.0.1 https://github.com/shellhub-io/shellhub.git shellhub-v0.0.1 cd shellhub-v0.0.1 Generate keys \u00b6 It is required to generate a key pair (private and public) for your ShellHub server instance. ./bin/keygen Starting \u00b6 For bringing up the ShellHub server, run: docker-compose up -d Make sure ports 80 and 22 are available at the host end Creating the initial user \u00b6 As the ShellHub server is up and running, you need to create the first user. ./bin/add-user <username> <password> You should keep the Tenant ID from the command output Adding your first device \u00b6 To add a device to ShellHub you need to install ShellHub Agent onto it. The ShellHub Agent runs inside a Docker container. Make sure you have Docker installed and properly set up. Open a terminal on your device and then run the following commands to install the ShellHub agent: curl \"http://<SERVER_IP>/install.sh?tenant_id=<TENANT_ID>\" | sh Replace <TENANT_ID> with your Tenant ID and <SERVER_IP> with the public IP address of the host running ShellHub. Connecting to your device \u00b6 ShellHub provides different connection methods: Web-based SSH client within the ShellHub UI (Chrome, Firefox) Traditional command line SSH client (Linux, Mac OS X) Any GUI SSH client like PuTTY (Windows) Open the ShellHub UI at http://localhost and sign in using the username and password generated previously. Once you are logged in, go to the Device Fleet page ( http://localhost/devices ) and follow instructions for a supported connection alternative: Web-based SSH client \u00b6 In the Device Fleet page, choose the device you wish to connect to and click on Terminal icon located at the Actions column on the chart. A dialog will pop up prompting you for the username and password of an existing user on the device's operating system. After providing credentials, click on Connect button. Command line SSH client \u00b6 To connect to your device using a command line SSH client, you need to know its SSHID address. In the Device Fleet page, choose the device you want to connect to and copy the device's SSHID address clicking on Copy icon located on SSHID address column of the chart. Then, run the following command on your terminal: ssh <USER>@<SSHID> Make sure to replace <USER> with the existing user on the device's operating system and <SSHID> with the aforementioned SSHID address. PuTTY GUI SSH client \u00b6 Connecting to your device using a GUI SSH client also requires its SSHID address. In the Device Fleet page, choose the device you want to connect to and copy the device's SSHID address by clicking on the Copy icon located at SSHID address column on the table. Open Putty and fill in with the following information: Host Name (or IP address): <USER> @ <SSHID> Port: 22 Connection type: SSH Make sure to replace <USER> with the existing user on the device's operating system and <SSHID> with the aforementioned SSHID address.","title":"Getting started"},{"location":"getting-started/#installing","text":"ShellHub is designed using the microservices design pattern, so that multiple small and isolated services collaborate to provide the server. In order to make it easier to test ShellHub and its features, we have created a Docker Compose environment that brings all of these components up and connects them together on a single machine. Before continuing, make sure you have installed Docker Engine and Docker Compose In a working directory, clone the ShellHub repository: git clone -b v0.0.1 https://github.com/shellhub-io/shellhub.git shellhub-v0.0.1 cd shellhub-v0.0.1","title":"Installing"},{"location":"getting-started/#generate-keys","text":"It is required to generate a key pair (private and public) for your ShellHub server instance. ./bin/keygen","title":"Generate keys"},{"location":"getting-started/#starting","text":"For bringing up the ShellHub server, run: docker-compose up -d Make sure ports 80 and 22 are available at the host end","title":"Starting"},{"location":"getting-started/#creating-the-initial-user","text":"As the ShellHub server is up and running, you need to create the first user. ./bin/add-user <username> <password> You should keep the Tenant ID from the command output","title":"Creating the initial user"},{"location":"getting-started/#adding-your-first-device","text":"To add a device to ShellHub you need to install ShellHub Agent onto it. The ShellHub Agent runs inside a Docker container. Make sure you have Docker installed and properly set up. Open a terminal on your device and then run the following commands to install the ShellHub agent: curl \"http://<SERVER_IP>/install.sh?tenant_id=<TENANT_ID>\" | sh Replace <TENANT_ID> with your Tenant ID and <SERVER_IP> with the public IP address of the host running ShellHub.","title":"Adding your first device"},{"location":"getting-started/#connecting-to-your-device","text":"ShellHub provides different connection methods: Web-based SSH client within the ShellHub UI (Chrome, Firefox) Traditional command line SSH client (Linux, Mac OS X) Any GUI SSH client like PuTTY (Windows) Open the ShellHub UI at http://localhost and sign in using the username and password generated previously. Once you are logged in, go to the Device Fleet page ( http://localhost/devices ) and follow instructions for a supported connection alternative:","title":"Connecting to your device"},{"location":"getting-started/#web-based-ssh-client","text":"In the Device Fleet page, choose the device you wish to connect to and click on Terminal icon located at the Actions column on the chart. A dialog will pop up prompting you for the username and password of an existing user on the device's operating system. After providing credentials, click on Connect button.","title":"Web-based SSH client"},{"location":"getting-started/#command-line-ssh-client","text":"To connect to your device using a command line SSH client, you need to know its SSHID address. In the Device Fleet page, choose the device you want to connect to and copy the device's SSHID address clicking on Copy icon located on SSHID address column of the chart. Then, run the following command on your terminal: ssh <USER>@<SSHID> Make sure to replace <USER> with the existing user on the device's operating system and <SSHID> with the aforementioned SSHID address.","title":"Command line SSH client"},{"location":"getting-started/#putty-gui-ssh-client","text":"Connecting to your device using a GUI SSH client also requires its SSHID address. In the Device Fleet page, choose the device you want to connect to and copy the device's SSHID address by clicking on the Copy icon located at SSHID address column on the table. Open Putty and fill in with the following information: Host Name (or IP address): <USER> @ <SSHID> Port: 22 Connection type: SSH Make sure to replace <USER> with the existing user on the device's operating system and <SSHID> with the aforementioned SSHID address.","title":"PuTTY GUI SSH client"},{"location":"introduction/","text":"Introduction \u00b6 This introduction section is intended to give a high-level overview of the ShellHub. There are few basic concepts that are important to understand the ShellHub. Those basic concepts are detailed below: SSH gateway \u00b6 The SSH gateway is a modern SSH server which forward connections to the devices running ShellHub's agent. Device \u00b6 An internet-connected device, such as a computer or something more specific like a single-board computer, running ShellHub's agent. Agent \u00b6 ShellHub's agent which must be installed on the device. SSHID \u00b6 SSHID is a unique address to identify a device in the SSH gateway, which must be specified in the following format: <NAMESPACE>.<DEVICE_NAME>@<GATEWAY_ADDRESS> Where: <NAMESPACE> : Is the account namespace identifier <DEVICE_NAME> : Is the device name identifier <GATEWAY_ADDRESS> : Is the gateway address identifier Example of SSHID: lab.rasp-1@localhost","title":"Introduction"},{"location":"introduction/#introduction","text":"This introduction section is intended to give a high-level overview of the ShellHub. There are few basic concepts that are important to understand the ShellHub. Those basic concepts are detailed below:","title":"Introduction"},{"location":"introduction/#ssh-gateway","text":"The SSH gateway is a modern SSH server which forward connections to the devices running ShellHub's agent.","title":"SSH gateway"},{"location":"introduction/#device","text":"An internet-connected device, such as a computer or something more specific like a single-board computer, running ShellHub's agent.","title":"Device"},{"location":"introduction/#agent","text":"ShellHub's agent which must be installed on the device.","title":"Agent"},{"location":"introduction/#sshid","text":"SSHID is a unique address to identify a device in the SSH gateway, which must be specified in the following format: <NAMESPACE>.<DEVICE_NAME>@<GATEWAY_ADDRESS> Where: <NAMESPACE> : Is the account namespace identifier <DEVICE_NAME> : Is the device name identifier <GATEWAY_ADDRESS> : Is the gateway address identifier Example of SSHID: lab.rasp-1@localhost","title":"SSHID"},{"location":"welcome/","text":"The ShellHub is composed of two major parts, the SSH gateway and the device agent . These parts work together to provide a secure SSH connection across the network to Linux-based devices. SSH gateway \u00b6 The ShellHub SSH gateway is a modern SSH server built using the microservices design pattern, meaning that multiple small, isolated services make up the server. It must be installed on any cloud provider like Azure, Google, AWS or DigitalOcean. Device agent \u00b6 The ShellHub device agent which must be installed on the device.","title":"Welcome"},{"location":"welcome/#ssh-gateway","text":"The ShellHub SSH gateway is a modern SSH server built using the microservices design pattern, meaning that multiple small, isolated services make up the server. It must be installed on any cloud provider like Azure, Google, AWS or DigitalOcean.","title":"SSH gateway"},{"location":"welcome/#device-agent","text":"The ShellHub device agent which must be installed on the device.","title":"Device agent"}]}